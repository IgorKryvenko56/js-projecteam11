{"mappings":"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","sources":["src/js/modal.js","src/js/catrgories-list.js","src/js/bestsellers-list.js","src/js/chosen-category.js","src/js/book-profile.js"],"sourcesContent":["// !function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n// document.addEventListener('DOMContentLoaded', function() {\n\n//    /* Записываем в переменные массив элементов-кнопок и подложку.\n//       Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n//    var modalButtons = document.querySelectorAll('.js-open-modal'),\n//        overlay      = document.querySelector('.js-overlay-modal'),\n//        closeButtons = document.querySelectorAll('.js-modal-close');\n\n//    /* Перебираем массив кнопок */\n//    modalButtons.forEach(function(item){\n\n//       /* Назначаем каждой кнопке обработчик клика */\n//       item.addEventListener('click', function(e) {\n\n//          /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n//             люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n//             Нужно подстраховаться. */\n//          e.preventDefault();\n\n//          /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n//             и будем искать модальное окно с таким же атрибутом. */\n//          var modalId = this.getAttribute('data-modal'),\n//              modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n//          /* После того как нашли нужное модальное окно, добавим классы\n//             подложке и окну чтобы показать их. */\n//          modalElem.classList.add('active');\n//          overlay.classList.add('active');\n//       }); // end click\n\n//     }); // end foreach\n\n//     closeButtons.forEach(function(item){\n\n//        item.addEventListener('click', function(e) {\n//           var parentModal = this.closest('.modal');\n\n//           parentModal.classList.remove('active');\n//           overlay.classList.remove('active');\n//        });\n\n//     }); // end foreach\n\n//      document.body.addEventListener('keyup', function (e) {\n//          var key = e.keyCode;\n\n//          if (key == 27) {\n\n//              document.querySelector('.modal.active').classList.remove('active');\n//              document.querySelector('.overlay').classList.remove('active');\n//          };\n//      }, false);\n\n//      overlay.addEventListener('click', function() {\n//          document.querySelector('.modal.active').classList.remove('active');\n//          this.classList.remove('active');\n//      });\n\n//  }); // end ready\nconst modal = document.querySelector('.modal');\nconst modalContent = modal.querySelector('.modal-content');\nconst closeButton = modal.querySelector('.js-modal-close');\n\n// Функція, щоб відкрити модальне вікно\nfunction openModal() {\n  modal.style.display = 'block';\n}\n\n// Функція, щоб закрити модальне вікно\nfunction closeModal() {\n  modal.style.display = 'none';\n}\n\n// Додати подію \"click\" для відкриття модального вікна\ndocument.querySelector('.book-cover').addEventListener('click', openModal);\n\n// Додати подію \"click\" для закриття модального вікна по хрестику\ncloseButton.addEventListener('click', closeModal);\n\n// Додати подію \"click\" для закриття модального вікна по backdrop\nmodalContent.addEventListener('click', event => {\n  if (event.target === modalContent) {\n    closeModal();\n  }\n});\n\n// Додати подію для закриття модального вікна на клавішу \"ESC\"\ndocument.addEventListener('keydown', event => {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n});\n","fetch('https://books-backend.p.goit.global/books/category-list', {\n  method: 'GET',\n  headers: { accept: 'application/json' },\n})\n  .then(response => {\n    console.log({ response });\n    return response.json();\n  })\n  .then(resData => {\n    console.log({ resData });\n    const categoriesList = document.querySelector('.categories-list');\n    const markup = resData.map(buildCategoriesListMarkup).join('');\n    categoriesList.innerHTML = markup;\n  });\n\nfunction buildCategoriesListMarkup({ list_name }) {\n  const listName = list_name;\n  return `\n         <li><a href=\"\" class=\"categories-item\">${listName}</a></li>\n    `;\n}\n","fetch('https://books-backend.p.goit.global/books/top-books', {\n  method: 'GET',\n  headers: { accept: 'application/json' },\n})\n  .then(response => {\n    console.log({ response });\n    return response.json();\n  })\n  .then(resData => {\n    console.log({ resData });\n    let topBooks = document.querySelector('.top-books');\n    let markup = resData.map(buildTopBooksMarkup).join('');\n    let additionalLink = `<button type=\"button\">affasfs</button>`;\n    markup += additionalLink;\n    topBooks.innerHTML = markup;\n    console.log(markup);\n    console.log(topBooks.innerHTML);\n  });\n\n// function buildTopBooksMarkup({ books }) {\n//   console.log(books);\n//   return `\n//     <ul>\n//   <li></li>\n//   <li>${books[0].list_name}</li>\n//   <li>${books[0].title}</li>\n//   <li>${books[0].author}</li>\n//   <li><img src=\"${books[0].book_image}\" alt=\"books photo\" /></li>\n// </ul>\n//     `;\n// }\n\n// ///////////////////////////////////////////////////////////////////\n\n// function createBestsellers(data) {\n//   // getting container div element\n//   const [container] = document.getElementsByClassName('container');\n//   // preparing HTML markup\n//   const markup = data.reduce((accumulator, dataItem) => {\n//     const dataItemMarkup = buildProductMarkup(dataItem);\n//     return (accumulator += dataItemMarkup);\n//   }, ''); // <div>...<span>ELEMENT INFORMATION</span>...</div>\n//   // adding HTML into the container\n//   container.innerHTML = markup;\n// }\n\nfunction buildTopBooksMarkup({ books }) {\n  console.log(books);\n  for (let i = 0; i < books.length; i += 1) {\n    // returning HTML markup as JS String\n    //    let bookMarkUp2nd = '';\n    return `\n    <ul class=\"ul-bestsellers\"> \n  <li>Category: ${books[i].list_name}</li>\n  <li>Title: ${books[i].title}</li>\n  <li>Author: ${books[i].author}</li>\n  <li>Image: <img src=\"${books[i].book_image}\" alt=\"books photo\" /></li>\n</ul>\n \n    `;\n  }\n}\n","const categoriesBlock = document.querySelector('.div-categories');\ncategoriesBlock.addEventListener('click', chooseCategory);\n\nfunction chooseCategory(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'A') {\n    return;\n  }\n\n  const selectedCategory = event.target.textContent;\n  fetch(\n    `https://books-backend.p.goit.global/books/category?category=${selectedCategory}`,\n    {\n      method: 'GET',\n      headers: { accept: 'application/json' },\n    }\n  )\n    .then(response => {\n      //   console.log({ response });\n      return response.json();\n    })\n    .then(resData => {\n      // console.log({ resData });\n      console.log(resData);\n      console.log({ resData });\n      const removedBestsellersHTML = document.querySelector('.ul-bestsellers');\n      const removedChosenHTML = document.querySelector('.top-books');\n      if (removedBestsellersHTML) {\n        removedBestsellersHTML.innerHTML = '';\n      }\n      if (removedChosenHTML) {\n        removedChosenHTML.innerHtml = '';\n      }\n\n      //   const chosen = document.querySelector('.chosen');\n      const markup = resData.map(buildTopBooksMarkup).join('');\n      removedChosenHTML.innerHTML = markup;\n    });\n\n  function buildTopBooksMarkup({ list_name, title, author, book_image }) {\n    // console.log(books);\n    ///////insert markup for books from choosen category///////////////////////\n    //   for (let i = 0; i < resData.length; i += 1) {\n    // returning HTML markup as JS String\n    return `\n    <ul class=\"ul-chosen-categories\"> \n  <li>Category: ${list_name}</li>\n  <li>Title: ${title}</li>\n  <li>Author: ${author}</li>\n  <li>Image: <img src=\"${book_image}\" alt=\"books photo\" /></li>\n</ul>\n    `;\n  }\n}\n","const bookProfile = document.querySelector('.book-profile');\nbookProfile.addEventListener('click', openBookProfile);\n\n// fetch('https://books-backend.p.goit.global/books/ bookId', {\nfunction openBookProfile(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'A') {\n    return;\n  }\n\n  //   const selectedCategory = event.target.textContent;\n  fetch(`https://books-backend.p.goit.global/books/${_id}`, {\n    method: 'GET',\n    headers: { accept: 'application/json' },\n  })\n    .then(response => {\n      console.log({ response });\n      return response.json();\n    })\n    .then(resData => {\n      console.log({ resData });\n      const [topBooks] = document.getElementsByClassName('top-books');\n      const markup = resData.map(buildTopBooksMarkup).join('');\n      topBooks.innerHTML = markup;\n    });\n\n  function buildTopBooksMarkup({ list_name }) {\n    const listName = list_name;\n    ///////insert markup for books from choosen category///////////////////////\n    return `\n         <li>${listName}</li>\n    `;\n  }\n}\n"],"names":["$8a7e756c566dd1ea$var$modal","document","querySelector","$8a7e756c566dd1ea$var$modalContent","$8a7e756c566dd1ea$var$closeButton","$8a7e756c566dd1ea$var$closeModal","style","display","$b43fae25a0ed9d4b$var$buildCategoriesListMarkup","list_name","$691cbd9e78af39a9$var$buildTopBooksMarkup","books","console","log","i","length","title","author","book_image","addEventListener","event","target","key","fetch","method","headers","accept","then","response","json","resData","categoriesList","markup","map","join","innerHTML","topBooks","preventDefault","nodeName","selectedCategory","textContent","buildTopBooksMarkup","removedBestsellersHTML","removedChosenHTML","innerHtml","_id","getElementsByClassName"],"version":3,"file":"index.3807488e.js.map"}