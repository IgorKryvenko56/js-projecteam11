{"mappings":"AAeA,SAASA,GAA0BC,UAAEA,IAEnC,MAAO,qDADUA,kB,CC2BnB,SAASC,GAAoBC,MAAEA,IAC7BC,QAAQC,IAAIF,GACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,GAAK,EAErC,MAAO,gCAEOH,EAAMG,GAAGL,gCACZE,EAAMG,GAAGE,6BACRL,EAAMG,GAAGG,uCACAN,EAAMG,GAAGI,oD,CDpDlCC,MAAM,0DAA2D,CAC/DC,OAAQ,MACRC,QAAS,CAAEC,OAAQ,sBAElBC,MAAKC,IACJZ,QAAQC,IAAI,C,SAAEW,IACPA,EAASC,UAEjBF,MAAKG,IACJd,QAAQC,IAAI,C,QAAEa,IACd,MAAMC,EAAiBC,SAASC,cAAc,oBACxCC,EAASJ,EAAQK,IAAIvB,GAA2BwB,KAAK,IAC3DL,EAAeM,UAAYH,CAAM,ICZrCX,MAAM,sDAAuD,CAC3DC,OAAQ,MACRC,QAAS,CAAEC,OAAQ,sBAElBC,MAAKC,IACJZ,QAAQC,IAAI,C,SAAEW,IACPA,EAASC,UAEjBF,MAAKG,IACJd,QAAQC,IAAI,C,QAAEa,IACd,MAAMQ,EAAWN,SAASC,cAAc,cAClCC,EAASJ,EAAQK,IAAIrB,GAAqBsB,KAAK,IACrDE,EAASD,UAAYH,EACrBlB,QAAQC,IAAIiB,EAAO,ICbCF,SAASC,cAAc,mBAC/BM,iBAAiB,SAEjC,SAAwBC,GAEtB,GADAA,EAAMC,iBACwB,MAA1BD,EAAME,OAAOC,SACf,OAGF,MAAMC,EAAmBJ,EAAME,OAAOG,YAsBtC,SAASC,GAAoBjC,UAAEA,EAASO,MAAEA,EAAKC,OAAEA,EAAMC,WAAEA,IAKvD,MAAO,gCAEOT,wBACHO,yBACCC,kCACSC,2C,CA/BvBC,MACE,+DAA+DqB,IAC/D,CACEpB,OAAQ,MACRC,QAAS,CAAEC,OAAQ,sBAGpBC,MAAKC,GAEGA,EAASC,SAEjBF,MAAKG,IAEJd,QAAQC,IAAIa,GACZd,QAAQC,IAAI,C,QAAEa,IAEd,MAAMiB,EAASf,SAASC,cAAc,WAChCC,EAASJ,EAAQK,IAAIW,GAAqBV,KAAK,IACrDW,EAAOV,UAAYH,CAAM,G,IC5BXF,SAASC,cAAc,iBAC/BM,iBAAiB,SAG7B,SAAyBC,GAEvB,GADAA,EAAMC,iBACwB,MAA1BD,EAAME,OAAOC,SACf,OAmBF,SAASG,GAAoBjC,UAAEA,IAG7B,MAAO,kBAFUA,c,CAhBnBU,MAAM,6CAA6CyB,MAAO,CACxDxB,OAAQ,MACRC,QAAS,CAAEC,OAAQ,sBAElBC,MAAKC,IACJZ,QAAQC,IAAI,C,SAAEW,IACPA,EAASC,UAEjBF,MAAKG,IACJd,QAAQC,IAAI,C,QAAEa,IACd,MAAOQ,GAAYN,SAASiB,uBAAuB,aAC7Cf,EAASJ,EAAQK,IAAIW,GAAqBV,KAAK,IACrDE,EAASD,UAAYH,CAAM,G","sources":["src/js/catrgories-list.js","src/js/bestsellers-list.js","src/js/chosen-category.js","src/js/book-profile.js"],"sourcesContent":["fetch('https://books-backend.p.goit.global/books/category-list', {\n  method: 'GET',\n  headers: { accept: 'application/json' },\n})\n  .then(response => {\n    console.log({ response });\n    return response.json();\n  })\n  .then(resData => {\n    console.log({ resData });\n    const categoriesList = document.querySelector('.categories-list');\n    const markup = resData.map(buildCategoriesListMarkup).join('');\n    categoriesList.innerHTML = markup;\n  });\n\nfunction buildCategoriesListMarkup({ list_name }) {\n  const listName = list_name;\n  return `\n         <li><a href=\"\" class=\"categories-item\">${listName}</a></li>\n    `;\n}\n","fetch('https://books-backend.p.goit.global/books/top-books', {\n  method: 'GET',\n  headers: { accept: 'application/json' },\n})\n  .then(response => {\n    console.log({ response });\n    return response.json();\n  })\n  .then(resData => {\n    console.log({ resData });\n    const topBooks = document.querySelector('.top-books');\n    const markup = resData.map(buildTopBooksMarkup).join('');\n    topBooks.innerHTML = markup;\n    console.log(markup);\n  });\n\n// function buildTopBooksMarkup({ books }) {\n//   console.log(books);\n//   return `\n//     <ul>\n//   <li></li>\n//   <li>${books[0].list_name}</li>\n//   <li>${books[0].title}</li>\n//   <li>${books[0].author}</li>\n//   <li><img src=\"${books[0].book_image}\" alt=\"books photo\" /></li>\n// </ul>\n//     `;\n// }\n\n// ///////////////////////////////////////////////////////////////////\n\n// function createBestsellers(data) {\n//   // getting container div element\n//   const [container] = document.getElementsByClassName('container');\n//   // preparing HTML markup\n//   const markup = data.reduce((accumulator, dataItem) => {\n//     const dataItemMarkup = buildProductMarkup(dataItem);\n//     return (accumulator += dataItemMarkup);\n//   }, ''); // <div>...<span>ELEMENT INFORMATION</span>...</div>\n//   // adding HTML into the container\n//   container.innerHTML = markup;\n// }\n\nfunction buildTopBooksMarkup({ books }) {\n  console.log(books);\n  for (let i = 0; i < books.length; i += 1) {\n    // returning HTML markup as JS String\n    return `\n    <ul> \n  <li>Category: ${books[i].list_name}</li>\n  <li>Title: ${books[i].title}</li>\n  <li>Author: ${books[i].author}</li>\n  <li>Image: <img src=\"${books[i].book_image}\" alt=\"books photo\" /></li>\n</ul>\n    `;\n  }\n}\n","const categoriesBlock = document.querySelector('.div-categories');\ncategoriesBlock.addEventListener('click', chooseCategory);\n\nfunction chooseCategory(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'A') {\n    return;\n  }\n\n  const selectedCategory = event.target.textContent;\n  fetch(\n    `https://books-backend.p.goit.global/books/category?category=${selectedCategory}`,\n    {\n      method: 'GET',\n      headers: { accept: 'application/json' },\n    }\n  )\n    .then(response => {\n      //   console.log({ response });\n      return response.json();\n    })\n    .then(resData => {\n      // console.log({ resData });\n      console.log(resData);\n      console.log({ resData });\n\n      const chosen = document.querySelector('.chosen');\n      const markup = resData.map(buildTopBooksMarkup).join('');\n      chosen.innerHTML = markup;\n    });\n\n  function buildTopBooksMarkup({ list_name, title, author, book_image }) {\n    // console.log(books);\n    ///////insert markup for books from choosen category///////////////////////\n    //   for (let i = 0; i < resData.length; i += 1) {\n    // returning HTML markup as JS String\n    return `\n    <ul> \n  <li>Category: ${list_name}</li>\n  <li>Title: ${title}</li>\n  <li>Author: ${author}</li>\n  <li>Image: <img src=\"${book_image}\" alt=\"books photo\" /></li>\n</ul>\n    `;\n  }\n}\n","const bookProfile = document.querySelector('.book-profile');\nbookProfile.addEventListener('click', openBookProfile);\n\n// fetch('https://books-backend.p.goit.global/books/ bookId', {\nfunction openBookProfile(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'A') {\n    return;\n  }\n\n  //   const selectedCategory = event.target.textContent;\n  fetch(`https://books-backend.p.goit.global/books/${_id}`, {\n    method: 'GET',\n    headers: { accept: 'application/json' },\n  })\n    .then(response => {\n      console.log({ response });\n      return response.json();\n    })\n    .then(resData => {\n      console.log({ resData });\n      const [topBooks] = document.getElementsByClassName('top-books');\n      const markup = resData.map(buildTopBooksMarkup).join('');\n      topBooks.innerHTML = markup;\n    });\n\n  function buildTopBooksMarkup({ list_name }) {\n    const listName = list_name;\n    ///////insert markup for books from choosen category///////////////////////\n    return `\n         <li>${listName}</li>\n    `;\n  }\n}\n"],"names":["$b43fae25a0ed9d4b$var$buildCategoriesListMarkup","list_name","$691cbd9e78af39a9$var$buildTopBooksMarkup","books","console","log","i","length","title","author","book_image","fetch","method","headers","accept","then","response","json","resData","categoriesList","document","querySelector","markup","map","join","innerHTML","topBooks","addEventListener","event","preventDefault","target","nodeName","selectedCategory","textContent","buildTopBooksMarkup","chosen","_id","getElementsByClassName"],"version":3,"file":"index.0b5603d1.js.map"}